[{"/Users/vadim/Desktop/Contact List/src/index.js":"1","/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Item/contactItem.js":"2","/Users/vadim/Desktop/Contact List/src/Components/Contact List/contactList.js":"3"},{"size":1481,"mtime":1610284543820,"results":"4","hashOfConfig":"5"},{"size":2391,"mtime":1610363777385,"results":"6","hashOfConfig":"5"},{"size":4212,"mtime":1610284378818,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"o6pt89",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"/Users/vadim/Desktop/Contact List/src/index.js",[],["16","17"],"/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Item/contactItem.js",["18","19","20","21"],"/Users/vadim/Desktop/Contact List/src/Components/Contact List/contactList.js",["22","23","24"],"import React from 'react'\nimport ContactItem from './Contact Item/contactItem'\n\nconst ContactList = ({List}) => {\n  const item = List.map((item) => {\n      console.log(item)\n        return (\n            <ContactItem\n            key={item.id}\n            name={item.name}\n            lables={item.lables}\n            phone={item.phone}\n            email={item.email}\n            avatar={item.avatar}\n            ></ContactItem>\n        )\n    })\n        return (\n            <div className=\"container bootstrap snippets bootdeys bootdey\">\n            <div className=\"row decor-default\">\n              <div className=\"col-lg-3 col-md-4 col-sm-12\">\n              <div className=\"contacts-labels\">\n                <div className=\"title\">All contacts<span>76</span></div>\n                <div className=\"list\">\n                  <div className=\"input-group\"> <input type=\"text\" className=\"contacts-search\" placeholder=\"Search\"/> \n                  </div>\n                  <div className=\"head\">Labels</div>\n                  <div className=\"unit\">\n                    <div className=\"lab lab-success\">Work</div><span></span>\n                  </div>\n                  <div className=\"unit\">\n                    <div className=\"lab lab-primary\">Family</div><span>8</span>\n                  </div>\n                  <div className=\"unit\">\n                    <div className=\"lab lab-danger\">Private</div><span>13</span>\n                  </div>\n                  <div className=\"unit\">\n                    <div className=\"lab lab-warning\">Friends</div><span>47</span>\n                  </div>\n                  <button type=\"button\" className=\"btn btn-primary font-weight-700\">Add new label</button>\n                </div>\n              </div>\n              </div>\n              <div className=\"col-lg-9 col-md-8 col-sm-12\">\n              <div className=\"contacts-list\">\n                <h5 className=\"title\">Contact List</h5>\n                <form className=\"ac-custom ac-checkbox ac-checkmark\" autoComplete=\"off\">\n                  <div className=\"input-group\">\n                    <input type=\"text\" className=\"contacts-list-search\" placeholder=\"Search\"/>\n                  </div>\n                  <div className=\"unit head\">\n                    <div className=\"field name\">\n                      <div className=\"check\">\n                        <input id=\"cb1\" name=\"cb1\" type=\"checkbox\"/>\n                        <label htmlFor=\"cb1\"></label>\n                      <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg></div>\n                      Name\n                    </div>\n                    <div className=\"field phone\">\n                      Phone\n                    </div>\n                    <div className=\"field email icons\">\n                      Email\n                      <div className=\"btn-group pull-right\" role=\"group\">\n                        <button type=\"button\" className=\"btn btn-default\"><span className=\"icon icon-folder\"></span></button>\n        \n                        <div className=\"btn-group\" role=\"group\">\n                          <button type=\"button\" className=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><span className=\"icon icon-label\"></span></button>\n        \n                          <ul className=\"dropdown-menu pull-right\">\n                            <li><a href=\"#\"><span className=\"label label-success text-dark\">New</span></a></li>\n                            <li><a href=\"#\"><span className=\"label label-primary text-dark\">Social</span></a></li>\n                            <li><a href=\"#\"><span className=\"label label-warning text-dark\">Spam</span></a></li>\n                          </ul>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-default\"><span className=\"icon icon-trash\"></span></button>\n                      </div>\n                    </div>\n                  </div>\n                  {item.length !==0 ? item : <p className='list-empty'>Contact list is empty.</p>}\n                  </form>\n                  </div>\n                </div>\n                  </div>\n                </div>  \n        )\n}\n\nexport default ContactList",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":10,"nodeType":"31","messageId":"32","endLine":1,"endColumn":16},{"ruleId":"33","severity":1,"message":"34","line":23,"column":17,"nodeType":"35","messageId":"36","endLine":23,"endColumn":19},{"ruleId":"29","severity":1,"message":"37","line":36,"column":52,"nodeType":"31","messageId":"32","endLine":36,"endColumn":61},{"ruleId":"38","severity":1,"message":"39","line":64,"column":21,"nodeType":"40","endLine":64,"endColumn":73},{"ruleId":"41","severity":1,"message":"42","line":71,"column":33,"nodeType":"40","endLine":71,"endColumn":45},{"ruleId":"41","severity":1,"message":"42","line":72,"column":33,"nodeType":"40","endLine":72,"endColumn":45},{"ruleId":"41","severity":1,"message":"42","line":73,"column":33,"nodeType":"40","endLine":73,"endColumn":45},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'allLables' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]