[{"/Users/vadim/Desktop/Contact List/src/index.js":"1","/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Item/contactItem.js":"2","/Users/vadim/Desktop/Contact List/src/Components/Contact List/contactList.js":"3","/Users/vadim/Desktop/Contact List/src/Components/Not found/notFound.js":"4"},{"size":2412,"mtime":1610686149288,"results":"5","hashOfConfig":"6"},{"size":2198,"mtime":1610685041267,"results":"7","hashOfConfig":"6"},{"size":4296,"mtime":1610686182344,"results":"8","hashOfConfig":"6"},{"size":274,"mtime":1610636191538,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"o6pt89",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"15"},"/Users/vadim/Desktop/Contact List/src/index.js",["21"],"/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Item/contactItem.js",["22","23"],"import { render } from '@testing-library/react';\nimport React, { Fragment } from 'react'\n\nclass ContactItem extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n          id: this.props.id,\n          name: this.props.name,\n          lables: this.props.lables,\n          phone: this.props.phone,\n          email: this.props.email,\n          avatar: this.props.avatar,\n          List: this.props.List\n        }\n        this.updata = this.updata.bind(this)\n    }\n    updata () {\n      this.setState({lables: this.props.lables})\n    }\n    \n    render() {\n      let {name, phone, email, avatar, id} = this.state;\n      const { lables } = this.props\n      const { onLableChange } = this.props \n      \n        const imageURL = `https://bootdey.com/img/Content/avatar/avatar${avatar}.png`\n        let styleLables = 'lab'\n        if(lables === 'Work') {\n          styleLables = 'lab lab-success'\n        } else if(lables === 'Family') {\n          styleLables = 'lab lab-primary'\n        } else if(lables === 'Private') {\n          styleLables = 'lab lab-danger'\n        } else if(lables === 'Friends') {\n          styleLables = 'lab lab-warning'\n        }\n\n        return(\n            <Fragment >\n              <div className=\"unit\">\n                <div className=\"field name\">\n                  <div className=\"check\">\n                    <input id=\"cb2\" name=\"cb1\" type=\"checkbox\"/>\n                    <label htmlFor=\"cb2\"></label>\n                  <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n                      \n                  </div>\n                  <div>\n                    <img src={imageURL} alt=\"image\" className=\"avatar\"/>{name}\n                  </div>\n                  <div className={styleLables} onClick={onLableChange}>{lables} <input type='hidden' value={id}/></div>\n                  \n                </div>\n                <div className=\"field phone\">\n                  {phone}\n                </div>\n                <div className=\"field email\">\n                  {email}\n                </div>\n              </div>\n              \n              </Fragment>      \n        )\n    }\n}\n\nexport default ContactItem  ",["24","25"],"/Users/vadim/Desktop/Contact List/src/Components/Contact List/contactList.js",["26","27","28"],"/Users/vadim/Desktop/Contact List/src/Components/Not found/notFound.js",["29"],"import React, { Fragment } from 'react'\n\nconst NotFound = () => {\n    return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Page not found</h1>\n                </div>\n            </div>\n    )\n}\n\nexport default NotFound",{"ruleId":"30","severity":1,"message":"31","line":62,"column":5,"nodeType":"32","messageId":"33","endLine":75,"endColumn":6},{"ruleId":"34","severity":1,"message":"35","line":1,"column":10,"nodeType":"36","messageId":"37","endLine":1,"endColumn":16},{"ruleId":"38","severity":1,"message":"39","line":50,"column":21,"nodeType":"40","endLine":50,"endColumn":73},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":85,"column":29,"nodeType":"40","endLine":85,"endColumn":41},{"ruleId":"45","severity":1,"message":"46","line":86,"column":29,"nodeType":"40","endLine":86,"endColumn":41},{"ruleId":"45","severity":1,"message":"46","line":87,"column":29,"nodeType":"40","endLine":87,"endColumn":41},{"ruleId":"34","severity":1,"message":"47","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":25},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]