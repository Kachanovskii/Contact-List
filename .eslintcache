[{"/Users/vadim/Desktop/Contact List/src/index.js":"1","/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Item/contactItem.js":"2","/Users/vadim/Desktop/Contact List/src/Components/Contact List/contactList.js":"3","/Users/vadim/Desktop/Contact List/src/Components/Not found/notFound.js":"4","/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Info/contactInfo.js":"5","/Users/vadim/Desktop/Contact List/src/Components/Contact List/Sidebar/sidebar.js":"6","/Users/vadim/Desktop/Contact List/src/Components/Add Contact/addContact.js":"7"},{"size":4154,"mtime":1610741921934,"results":"8","hashOfConfig":"9"},{"size":2481,"mtime":1610719751142,"results":"10","hashOfConfig":"9"},{"size":3408,"mtime":1610733063215,"results":"11","hashOfConfig":"9"},{"size":274,"mtime":1610636191538,"results":"12","hashOfConfig":"9"},{"size":1490,"mtime":1610741565429,"results":"13","hashOfConfig":"9"},{"size":1130,"mtime":1610741948612,"results":"14","hashOfConfig":"9"},{"size":3009,"mtime":1610742059505,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"o6pt89",{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vadim/Desktop/Contact List/src/index.js",["35","36"],"/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Item/contactItem.js",["37","38","39","40","41"],"import { render } from '@testing-library/react';\nimport React, { Fragment } from 'react'\nimport { BrowserRouter as Router, Link,  Route, Switch} from 'react-router-dom'\n\n\n\nclass ContactItem extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n          id: this.props.id,\n          name: this.props.name,\n          lables: this.props.lables,\n          phone: this.props.phone,\n          email: this.props.email,\n          avatar: this.props.avatar,\n          List: this.props.List\n        }\n    }\n    \n    render() {\n      let {name, phone, email, avatar, id} = this.props;\n      const { lables } = this.props\n      const { onLableChange, onDelete, onDetailInfo } = this.props \n      \n        const imageURL = `https://bootdey.com/img/Content/avatar/avatar${avatar}.png`\n        let styleLables = 'lab'\n        if(lables === 'Work') {\n          styleLables = 'lab lab-success'\n        } else if(lables === 'Family') {\n          styleLables = 'lab lab-primary'\n        } else if(lables === 'Private') {\n          styleLables = 'lab lab-danger'\n        } else if(lables === 'Friends') {\n          styleLables = 'lab lab-warning'\n        }\n\n        return(\n              <Fragment >\n              <div className=\"unit\">\n                <div className=\"field name\">\n                  <div className=\"check\">\n                    <input id=\"cb2\" name=\"cb1\" type=\"checkbox\"/>\n                    <label htmlFor=\"cb2\"></label>\n                  <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n                      \n                  </div>\n                  <div>\n                    <img src={imageURL} alt=\"image\" className=\"avatar\"/>{name}\n                  </div>\n                  <div className={styleLables} onClick={onLableChange}>{lables} <input type='hidden' value={id}/></div>\n                  \n                </div>\n                <div className=\"field phone\">\n                  {phone}\n                </div>\n                <div className=\"field email\">\n                  {email}\n                </div>\n                <div className='btn-group btn-group-unit'>\n                  <Link className=\"btn-danger\" onClick={onDelete}>Delete</Link>\n                  <Link to=\"/info\" className=\"btn-default\" onClick={onDetailInfo}>Info</Link>\n                  <Link className=\"btn-warning\">Edit</Link>\n                </div>\n              </div>\n             \n              </Fragment> \n              \n        )\n    }\n}\n\nexport default ContactItem  ",["42","43"],"/Users/vadim/Desktop/Contact List/src/Components/Contact List/contactList.js",["44","45","46","47","48","49"],"import React from 'react'\nimport ContactItem from './Contact Item/contactItem'\nimport { Link } from 'react-router-dom'\nimport { BrowserRouter as Router,  Route, Switch} from 'react-router-dom'\n\n\nclass ContactList extends React.Component  {\n  constructor(props) {\n    super(props)\n    this.state = {\n      List: this.props.List,\n      onLableChange: this.props.onLableChange,\n      onDelete: this.props.onDelete,\n      onDetailInfo: this.props.onDetailInfo\n    }\n  }\n\n  render() {\n    let user = this.props.List.map((user) => {\n     return(\n       <ContactItem \n        id={user.id}\n        name={user.name}\n        lables={user.lables}\n        phone={user.phone}\n        email={user.email}\n        avatar={user.avatar}\n        onLableChange={() => {this.state.onLableChange(user.id)}}\n        onDelete={() => {this.props.onDelete(user.id)}}\n        onDetailInfo={() => {this.props.onDetailInfo(user.id, user.name, user.lables, user.phone, user.email, user.avatar)}}\n       />\n     )\n    })\n\n    return (\n          <div className=\"col-lg-9 col-md-8 col-sm-12\">\n          <div className=\"contacts-list\">\n            <h5 className=\"title\">Contact List</h5>\n            <form className=\"ac-custom ac-checkbox ac-checkmark\" autoComplete=\"off\">\n              <div className=\"input-group\">\n                <input type=\"text\" className=\"contacts-list-search\" placeholder=\"Search\"/>\n              </div>\n              <div className=\"btn-head\">\n                <Link to=\"/add-contact\" className=\"btn-add btn-primary\">+</Link>\n              </div>\n              \n              <div className=\"unit head\">\n                <div className=\"field name\">\n                  <div className=\"check\">\n                    <input id=\"cb1\" name=\"cb1\" type=\"checkbox\"/>\n                    <label htmlFor=\"cb1\"></label>\n                  <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg></div>\n                  Name\n                </div>\n                <div className=\"field phone\">\n                  Phone\n                </div>\n                <div className=\"field email icons\">\n                  Email\n                  <div className=\"btn-group pull-right\" role=\"group\">\n                    <button type=\"button\" className=\"btn btn-default\"><span className=\"icon icon-folder\"></span></button>\n    \n                    <div className=\"btn-group\" role=\"group\">\n                      <button type=\"button\" className=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><span className=\"icon icon-label\"></span></button>\n    \n                      <ul className=\"dropdown-menu pull-right\">\n                        <li><a href=\"#\"><span className=\"label label-success text-dark\">New</span></a></li>\n                        <li><a href=\"#\"><span className=\"label label-primary text-dark\">Social</span></a></li>\n                        <li><a href=\"#\"><span className=\"label label-warning text-dark\">Spam</span></a></li>\n                      </ul>\n                    </div>\n                    <button type=\"button\" className=\"btn btn-default\"><span className=\"icon icon-trash\"></span></button>\n                  </div>\n                </div>\n              </div>\n              {user.length !==0 ? user: <p className='liset-empty'>Contact list is empty.</p>}\n              </form>\n              </div>\n            </div>  \n    )\n  }\n}\n\nexport default ContactList","/Users/vadim/Desktop/Contact List/src/Components/Not found/notFound.js",["50"],"import React, { Fragment } from 'react'\n\nconst NotFound = () => {\n    return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h1>Page not found</h1>\n                </div>\n            </div>\n    )\n}\n\nexport default NotFound","/Users/vadim/Desktop/Contact List/src/Components/Contact List/Contact Info/contactInfo.js",["51","52","53","54","55"],"import React from 'react'\nimport { BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom'\n\n\nclass ContactInfo extends React.Component{\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const {name, phone, email, avatar, lables} = this.props.ContactDetail\n        const imageURL = `https://bootdey.com/img/Content/avatar/avatar${avatar}.png`\n        let styleLables = 'lab'\n        if(lables === 'Work') {\n          styleLables = 'lab lab-success'\n        } else if(lables === 'Family') {\n          styleLables = 'lab lab-primary'\n        } else if(lables === 'Private') {\n          styleLables = 'lab lab-danger'\n        } else if(lables === 'Friends') {\n          styleLables = 'lab lab-warning'\n        }\n        console.log(avatar)\n        return(\n            <div className=\"col-lg-9 col-md-8 col-sm-12\">\n            <div className=\"contacts-list\">\n            <h5 className=\"title\">Contact info:</h5>\n            <div className=\"btn-contact-info\">\n            <Link to=\"/\" className=\" btn-primary\">\n            back\n            </Link></div>\n            <div className=\"contact-detail\">\n                <img className=\"img-cd\" src={imageURL}/>\n                <div className=\"info-cd\"><div><div className={styleLables}>{lables}</div></div>\n                <h4>{name}</h4>\n                <p>{email}</p>\n                <p>{phone}</p></div> \n            </div>\n            </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ContactInfo","/Users/vadim/Desktop/Contact List/src/Components/Contact List/Sidebar/sidebar.js",[],"/Users/vadim/Desktop/Contact List/src/Components/Add Contact/addContact.js",["56","57","58","59","60"],{"ruleId":"61","severity":1,"message":"62","line":4,"column":35,"nodeType":"63","messageId":"64","endLine":4,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":71,"column":5,"nodeType":"67","messageId":"68","endLine":84,"endColumn":6},{"ruleId":"61","severity":1,"message":"69","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":16},{"ruleId":"61","severity":1,"message":"70","line":3,"column":27,"nodeType":"63","messageId":"64","endLine":3,"endColumn":33},{"ruleId":"61","severity":1,"message":"71","line":3,"column":42,"nodeType":"63","messageId":"64","endLine":3,"endColumn":47},{"ruleId":"61","severity":1,"message":"72","line":3,"column":49,"nodeType":"63","messageId":"64","endLine":3,"endColumn":55},{"ruleId":"73","severity":1,"message":"74","line":49,"column":21,"nodeType":"75","endLine":49,"endColumn":73},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"61","severity":1,"message":"70","line":4,"column":27,"nodeType":"63","messageId":"64","endLine":4,"endColumn":33},{"ruleId":"61","severity":1,"message":"71","line":4,"column":36,"nodeType":"63","messageId":"64","endLine":4,"endColumn":41},{"ruleId":"61","severity":1,"message":"72","line":4,"column":43,"nodeType":"63","messageId":"64","endLine":4,"endColumn":49},{"ruleId":"80","severity":1,"message":"81","line":67,"column":29,"nodeType":"75","endLine":67,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":68,"column":29,"nodeType":"75","endLine":68,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":69,"column":29,"nodeType":"75","endLine":69,"endColumn":41},{"ruleId":"61","severity":1,"message":"82","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"70","line":2,"column":27,"nodeType":"63","messageId":"64","endLine":2,"endColumn":33},{"ruleId":"61","severity":1,"message":"71","line":2,"column":41,"nodeType":"63","messageId":"64","endLine":2,"endColumn":46},{"ruleId":"61","severity":1,"message":"72","line":2,"column":48,"nodeType":"63","messageId":"64","endLine":2,"endColumn":54},{"ruleId":"83","severity":1,"message":"84","line":6,"column":5,"nodeType":"85","messageId":"86","endLine":8,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":33,"column":17,"nodeType":"75","endLine":33,"endColumn":57},{"ruleId":"61","severity":1,"message":"70","line":3,"column":27,"nodeType":"63","messageId":"64","endLine":3,"endColumn":33},{"ruleId":"61","severity":1,"message":"71","line":3,"column":41,"nodeType":"63","messageId":"64","endLine":3,"endColumn":46},{"ruleId":"61","severity":1,"message":"72","line":3,"column":48,"nodeType":"63","messageId":"64","endLine":3,"endColumn":54},{"ruleId":"61","severity":1,"message":"89","line":57,"column":48,"nodeType":"63","messageId":"64","endLine":57,"endColumn":60},{"ruleId":"73","severity":1,"message":"74","line":89,"column":16,"nodeType":"75","endLine":89,"endColumn":90},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'render' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'changeAvatar' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]